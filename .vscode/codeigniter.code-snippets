{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Model": {
		"prefix": "model",
		"body": [
			"<?php",
			"defined('BASEPATH') OR exit('No direct script access allowed');",
			"",
			"class ${TM_FILENAME_BASE} extends CI_Model {",
			"\tpublic function __construct() {",
			"\t\tparent::__construct();$0",
			"\t}",
			"",
			"\tpublic function list() {",
			"\t}",
			"",
			"\tpublic function get() {",
			"\t}",
			"",
			"\tpublic function create() {",
			"\t}",
			"",
			"\tpublic function update() {",
			"\t}",
			"",
			"\tpublic function delete() {",
			"\t}",
			"}"
		],
		"description": "Model Blueprint"
	},
	"Controller": {
		"prefix": "controller",
		"body": [
			"<?php",
			"defined('BASEPATH') OR exit('No direct script access allowed');",
			"",
			"class ${TM_FILENAME_BASE} extends CI_Controller {",
			"\tpublic function index() {",
			"\t\t$0",
			"\t}",
			"}"
		],
		"description": "Controller Blueprint"
	},
	"Load_View": {
		"prefix": "load-view",
		"body": "$$this->load->view('$0');$1",
		"description": "Load view"
	},
	"Load_Model": {
		"prefix": "load-model",
		"body": "$$this->load->model('$0');$1",
		"description": "Load model"
	}
}